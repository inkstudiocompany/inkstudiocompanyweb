
/*!
* 	FSVS - Full Screen Vertical Scroller
* 	https://github.com/lukesnowden/FSVS
* 	Copyright 2014 Luke Snowden
* 	Released under the MIT license:
* 	http://www.opensource.org/licenses/mit-license.php
*/

;( function($){

    $.fn.fsvs = function( options ) {

        options = options || {};

        /**
         * [defaults description]
         * @type {Object}
         */

        var defaults = {
            speed : 5000,
            bodyID : 'fsvs-body',
            selector : '> .slide',
            mouseSwipeDisance : 40,
            afterSlide : function(){},
            beforeSlide : function(){},
            endSlide : function(){},
            mouseWheelEvents : true,
            mouseWheelDelay : false,
            scrollabelArea : 'scrollable',
            mouseDragEvents : true,
            touchEvents : true,
            arrowKeyEvents : true,
            pagination : true,
            nthClasses : false,
            detectHash : true
        };

        for( var i in options ) {
            defaults[i] = options[i];
        }
        options = defaults;

        /**
         * [currentSlideIndex description]
         * @type {Number}
         */

        var currentSlideIndex = 0;

        /**
         * [ignoreHashChange description]
         * @type {Boolean}
         */

        var ignoreHashChange = false;

        /**
         * [bodyTimeout description]
         * @type {[type]}
         */

        var bodyTimeout = null;

        /**
         * [body description]
         * @type {[type]}
         */

        var body = null;

        /**
         * [scrolling description]
         * @type {Boolean}
         */

        var scrolling = false;

        /**
         * [mouseWheelTimer description]
         * @type {Boolean}
         */

        var mouseWheelTimer = false;

        /**
         * [mouseWheelScrollStart description]
         * Indicates when the mouseWheel last invoked a slide event.
         * @type {Integer}
         */

        var mouseWheelScrollStart = 0;

        /**
         * [pagination description]
         * @type {Boolean}
         */

        var pagination = false;

        /**
         * [isChrome description]
         * @reference http://stackoverflow.com/questions/4565112/javascript-how-to-find-out-if-the-user-browser-is-chrome
         * @return {Boolean} [description]
         */

        var isChrome = function() {
            var isChromium = window.chrome,
                vendorName = window.navigator.vendor;
            if( isChromium !== null && vendorName === "Google Inc." ) {
                return true;
            }
            return false;
        };

        /**
         * [changeViaHash description]
         * @return {[type]} [description]
         */

        var changeViaHash = function() {
            if( ! ignoreHashChange ) {
                if( window.location.hash !== '' ) {
                    var slideID = window.location.hash;
                    var slideTo = $( '> ' + slideID, body );
                    app.slideToIndex( slideTo.index() );
                }
            }
            ignoreHashChange = false;
        };

        /**
         * [detectHash description]
         * @return {[type]} [description]
         */

        var detectHash = function(){
            $( options.selector, body ).each( function( i ) {
                var slide = $(this);
                if( ! slide.attr( 'id' ) ) {
                    slide.attr( 'id', 'slide-' + (i+1) );
                }
            });
            changeViaHash();
        };

        /**
         * [hasTransition description]
         * @return {Boolean} [description]
         */

        var hasTransition = function(){
            prefixes = ['Webkit','Moz','ms','O'];
            for( var i in prefixes ) {
                if( typeof document.getElementsByTagName( 'body' )[0].style[prefixes[i] + 'Transition' ] !== 'undefined' ) {
                    return true;
                }
            }
            return false;
        }

        /**
         * [bindMouseDrag description]
         * @return {[type]} [description]
         */

        var bindMouseDrag = function() {
            var x, y;
            window.onmousedown = function(e) {
                y = e.y;
            }
            window.onmouseup = function(e) {
                if( e.y > ( y+options.mouseSwipeDisance ) ) {
                    app.slideUp();
                } else if( e.y < ( y-options.mouseSwipeDisance ) ) {
                    app.slideDown();
                }
            }
        };

        /**
         * [unBindMouseDrag description]
         * @return {[type]} [description]
         */
        var unBindMouseDrag = function(){
            window.onmousedown = function(){};
            window.onmouseup = function(){};
        }

        /**
         * [bindTouchSwipe description]
         * @return {[type]} [description]
         */

        var bindTouchSwipe = function() {
            var startY = null;
            $(window).on( "touchstart.fsvs", function(ev) {
                var e = ev.originalEvent;
                var cancelOn = ['a','input','textarea','select'];
                if( $.inArray( e.target.nodeName.toLowerCase(), cancelOn ) == -1 ) {
                    var touches = e.touches;
                    if( touches && touches.length ) {
                        startY = touches[0].pageY;
                    }
                    e.preventDefault();
                }
            });
            $(window).on( "touchmove.fsvs", function(ev) {
                var e = ev.originalEvent;
                if( startY !== null ) {
                    var touches = e.touches;
                    if( touches && touches.length ) {
                        var deltaY = startY - touches[0].pageY;
                        if ( deltaY >= options.mouseSwipeDisance ) {
                            app.slideDown();
                            startY = null;
                        }
                        if ( deltaY <= ( options.mouseSwipeDisance * -1 ) ) {
                            app.slideUp();
                            startY = null;
                        }
                    }
                    e.preventDefault();
                }
            });
        };

        /**
         * [unbindTouchSwipe description]
         * @return {[type]} [description]
         */
        var unbindTouchSwipe = function() {
            $(window).unbind( "touchstart.fsvs" );
            $(window).unbind( "touchmove.fsvs" );
        };

        /**
         * [mouseWheelHandler description]
         * @param  {[type]} e [description]
         * @return {[type]}   [description]
         */

        var mouseWheelHandler = function( ev ) {
            var e = window.event || ev;
            var wheely = ( e.wheelDelta || -e.detail || e.originalEvent.detail );
            var delta = Math.max( -1, Math.min( 1, wheely ) );
            if( isChrome() ) {
                // chrome seems to extends its "wheely" motion
                wheely = Math.floor( wheely / 5 );
            }
            if( ( ! scrolling || ( options.mouseWheelDelay && Date.now() > mouseWheelScrollStart + options.mouseWheelDelay ) ) && Math.abs( wheely ) > 5 ) {
                mouseWheelScrollStart = Date.now();
                scrolling = true;
                var allowToRun = true;
                var target = $(ev.target);
                if( target.hasClass( options.scrollabelArea ) || target.parents( '.' + options.scrollabelArea ).length !== 0 ) {
                    allowToRun = false;
                    var scrollableArea = target.closest('.' + options.scrollabelArea);
                    if( target.hasClass( options.scrollabelArea ) ) scrollableArea = target;
                    if( isScrollingUp(ev) && scrollableArea.scrollTop() === 0 ) {
                        allowToRun = true;
                    } else if( scrollableArea[0].scrollHeight - scrollableArea.scrollTop() === scrollableArea.outerHeight() ) {
                        allowToRun = true;
                    }
                }
                if( allowToRun ) {
                    if( isScrollingUp(ev) ) {
                        app.slideUp();
                    } else {
                        app.slideDown();
                    }
                } else {
                    scrolling = false;
                }
            }
        };

        /**
         * [isScrollingUp description]
         * @param  {[type]}  ev [description]
         * @return {Boolean}    [description]
         */
        var isScrollingUp = function(ev){
            var e = window.event || ev;
            var wheely = ( e.wheelDelta || -e.detail || e.originalEvent.detail );
            var delta = Math.max( -1, Math.min( 1, wheely ) );
            if( isChrome() ) wheely = Math.floor( wheely / 5 );
            if( e.originalEvent && e.originalEvent.detail ) {
                if( delta > 0 ) {
                    return false;
                }
            } else if( delta < 0 ) {
                return false;
            }
            return true;
        }

        /**
         * [bindMouseWheelEvent description]
         * @return {[type]} [description]
         */

        var bindMouseWheelEvent = function() {
            $(window).bind('wheel.fsvs mousewheel.fsvs DOMMouseScroll.fsvs MozMousePixelScroll.fsvs', mouseWheelHandler );
        };

        /**
         * [unBindMouseWheelEvent description]
         * @return {[type]} [description]
         */
        var unBindMouseWheelEvent = function(){
            $(window).unbind('wheel.fsvs mousewheel.fsvs DOMMouseScroll.fsvs MozMousePixelScroll.fsvs', mouseWheelHandler );
        };

        /**
         * [bindKeyArrows description]
         * @return {[type]} [description]
         */

        var bindKeyArrows = function() {
            allow = true;
            $('input,textarea,select,option', body)
                .bind( 'focus.fsvs', function(){ allow = false; })
                .bind( 'blur.fsvs', function(){ allow = true; });
            window.onkeydown = function(e) {
                e = e || window.event;
                if ( e.keyCode == '38' && allow ) app.slideUp();
                else if ( e.keyCode == '40' && allow ) app.slideDown();
            }
        };

        /**
         * [unbindKeyArrows description]
         * @return {[type]} [description]
         */
        var unbindKeyArrows = function(){
            $('input,textarea,select,option', body).unbind('focus.fsvs blur.fsvs');
            window.onkeydown = function(){};
        };

        /**
         * [slideCallback description]
         * @param  {[type]} index [description]
         * @return {[type]}       [description]
         */

        var slideCallback = function( index ) {
            currentSlideIndex = index;
            options.afterSlide( index );
            if( options.detectHash ) {
                var slide = $( options.selector, body ).eq( index );
                window.location.hash = slide[0].id;
            }
            if( ! app.canSlideDown() ) {
                options.endSlide( index );
            }
            scrolling = false;
        };

        /**
         * [nthClasses description]
         * @param  {[type]} nthClassLimit [description]
         * @return {[type]}               [description]
         */

        var nthClasses = function( nthClassLimit ) {
            $( options.selector, body ).each( function( i ) {
                var nthClass = 'nth-class-' + ((i%nthClassLimit)+1);
                if( ! $(this).hasClass( nthClass ) ) {
                    $(this).addClass( nthClass );
                }
            });
        };

        /**
         * [jQuerySlide description]
         * @param  {[type]} index [description]
         * @return {[type]}       [description]
         */

        var jQuerySlide = function( index ) {
            options.beforeSlide( index );
            if( body.is( ':animated' ) ) {
                currentSlideIndex = index;
                body.stop();
            }
            body.animate({
                top : '-' + (index*$(window).height()) + 'px'
            }, options.speed, function() {
                slideCallback( index );
            });
        };

        /**
         * [cssSlide description]
         * @param  {[type]} index [description]
         * @return {[type]}       [description]
         */

        var cssSlide = function( index ) {
            options.beforeSlide( index );
            body.css({
                '-webkit-transform' : 'translate3d(0, -' + (index*100) + '%, 0)',
                '-moz-transform' : 'translate3d(0, -' + (index*100) + '%, 0)',
                '-ms-transform' : 'translate3d(0, -' + (index*100) + '%, 0)',
                'transform' : 'translate3d(0, -' + (index*100) + '%, 0)',
            });
            if( bodyTimeout !== null ) {
                currentSlideIndex = index;
                clearTimeout( bodyTimeout );
            }
            bodyTimeout = setTimeout( function(){
                slideCallback( index );
                bodyTimeout = null;
            }, options.speed );
        }

        /**
         * [removeStyling description]
         * @return {[type]} [description]
         */
        var removeStyling = function(){
            body.attr('style', '');
            $('> div', body).each(function(i){
                $(this).attr('class', 'slide' );
            });
            $('body').attr('class','');
            $('#fsvs-pagination').remove();
        };

        /**
         * [app description]
         * @type {Object}
         */

        var app = {

            nthClasses : nthClasses,

            /**
             * [addPagination description]
             */

            addPagination : function() {
                pagination = $('<ul id="fsvs-pagination no-mobile no-tportrait"></ul>');
                $( options.selector, body ).each( function(i) {
                    var linkClass = currentSlideIndex === i ? 'pagination-link active' : 'pagination-link';
                    $('<li class="' + linkClass + '"><span><span></span></span></li>').appendTo( pagination );
                });
                if( $('#fsvs-pagination').length !== 0 ) {
                    $('#fsvs-pagination').remove();
                }
                pagination.appendTo( $('body') );
                var paginationHeight = pagination.height();
                var speed = options.speed/1000;
                $('span', pagination).css({
                    '-webkit-transition': 'all ' + speed + 's',
                    '-moz-transition'	: 'all ' + speed + 's',
                    '-o-transition'		: 'all ' + speed + 's',
                    'transition'		: 'all ' + speed + 's'
                });
                pagination.css({
                    marginTop : '-' + (paginationHeight/2) + 'px',
                    right : '25px'
                });
                $('li', pagination).bind( 'click.fsvs', function(e){
                    ignoreHashChange = true;
                    $('.active', pagination).removeClass( 'active' );
                    $(this).addClass( 'active' );
                    app.slideToIndex( $(this).index(), e );
                });
            },

            /**
             * [setSpeed description]
             * @param {[type]} _speed [description]
             */

            setSpeed : function( _speed ) {
                speed = _speed/1000;
                body.css({
                    '-webkit-transition': 'all ' + speed + 's',
                    '-moz-transition'	: 'all ' + speed + 's',
                    '-o-transition'		: 'all ' + speed + 's',
                    'transition'		: 'all ' + speed + 's'
                });
            },

            /**
             * [shouldRun description]
             * @return {[type]} [description]
             */

            shouldRun : function() {
                return $('html').hasClass( 'fsvs' );
            },

            /**
             * [canSlideUp description]
             * @return {[type]} [description]
             */

            canSlideUp : function() {
                if( currentSlideIndex === 0 ) return false;
                return true;
            },

            /**
             * [canSlideDown description]
             * @return {[type]} [description]
             */

            canSlideDown : function() {
                if( $( options.selector, body ).eq( (currentSlideIndex+1) ).length === 0 ) return false;
                return true;
            },

            /**
             * [addClasses description]
             * @param {[type]} before [description]
             * @param {[type]} after  [description]
             */

            addClasses : function( before, after ) {
                var _body = $('body');
                _body.removeClass( removeClass = 'active-slide-' + (before+1) );
                _body.addClass( 'active-slide-' + (after+1) );
                $( options.selector, body ).eq( before ).removeClass( 'active-slide' );
                $( options.selector, body ).eq( after ).addClass( 'active-slide' );
                if( options.nthClasses ) {
                    _body.removeClass( 'active-nth-slide-' + (( before % options.nthClasses )+1) );
                    _body.addClass( 'active-nth-slide-' + (( after % options.nthClasses )+1) );
                }
            },

            /**
             * [slideToIndex description]
             * @param  {[type]} index [description]
             * @return {[type]}       [description]
             */

            slideToIndex : function( index, e ) {
                var e = e || false;
                if( ! e && pagination ) {
                    $('.active', pagination).removeClass( 'active' );
                    $('> *', pagination).eq(index).addClass( 'active' );
                }
                app.addClasses( currentSlideIndex, index );
                if( hasTransition() ) {
                    cssSlide( index );
                } else {
                    jQuerySlide( index );
                }
            },

            /**
             * [unbind description]
             * @return {[type]} [description]
             */
            unbind : function(){
                unBindMouseDrag();
                unBindMouseWheelEvent();
                unbindKeyArrows();
                unbindTouchSwipe();
                removeStyling();
                $('html').removeClass('fsvs');
            },

            /**
             * [rebind description]
             * @return {[type]} [description]
             */
            rebind : function() {
                $('html').addClass('fsvs');
                app.init();
            },

            /**
             * [slideDown description]
             * @return {[type]} [description]
             */

            slideDown : function(e) {
                if( app.canSlideDown() ) {
                    ignoreHashChange = true;
                    app.slideToIndex( (currentSlideIndex+1), e );
                } else {
                    scrolling = false;
                }
            },

            /**
             * [slideUp description]
             * @return {[type]} [description]
             */

            slideUp : function(e) {
                if( app.canSlideUp() ) {
                    ignoreHashChange = true;
                    app.slideToIndex( (currentSlideIndex-1), e );
                } else {
                    scrolling = false;
                }
            },

            /**
             * [init description]
             * @return {[type]} [description]
             */

            init : function() {
                body = $( '#' + options.bodyID );
                if( hasTransition() ) {
                    app.setSpeed( options.speed );
                }
                if( options.pagination ) {
                    app.addPagination();
                }
                if( options.nthClasses ) {
                    nthClasses( options.nthClasses );
                }
                if( options.mouseWheelEvents ) {
                    bindMouseWheelEvent();
                }
                if( options.arrowKeyEvents ) {
                    bindKeyArrows();
                }
                if( options.mouseDragEvents ) {
                    bindMouseDrag();
                }
                if( options.touchEvents ) {
                    bindTouchSwipe();
                }
                if( options.detectHash ) {
                    detectHash();
                    if( window.addEventListener ) {
                        window.addEventListener( "hashchange", changeViaHash, false );
                    }
                    else if (window.attachEvent) {
                        window.attachEvent( "onhashchange", changeViaHash );
                    }
                    $('body').attr('class', ' ');
                }
                app.addClasses( 0, 0 );
            }

        };

        if( app.shouldRun() ) {
            app.init();
        }
        return app;

    };

})( jQuery );
'use strict';

var timeOut = 0;


jQuery(document).ready(function($){
    navbarScroll();

    var slider = $.fn.fsvs({
        speed               : 900,
        bodyID              : 'fsvs-body',
        selector            : '> .section',
        mouseSwipeDisance   : 60,
        afterSlide          : function(response){
            homeAnimateIn(response);
            navbarScroll();
        },
        beforeSlide         : function(response){
            if(response == 2 || response == 4 || response == 6) {
                $('#fsvs-pagination, .socialbar').addClass('blueTheme');
            } else {
                $('#fsvs-pagination, .socialbar').removeClass('blueTheme');
            }
            homeAnimateOut(response);
        },
        endSlide            : function(){
            navbarScroll();
        },
        mouseWheelEvents    : true,
        mouseWheelDelay     : false,
        mouseDragEvents     : true,
        touchEvents         : true,
        arrowKeyEvents      : false,
        pagination          : true,
        nthClasses          : 2,
        detectHash          : true
    });

    $(".menuOpen").on("tap",function(){
        menuIn();
    });
    $("#menuClose").on("tap",function(){
        $("#menuClose").addClass('bounceIn');
        menuOut();
    });
    $("#works .project-carrusel .project .project-wrapper a").on("tap",function(){
        eval($(this).attr('href'));
    });

    new WOW().init();

    $('form.dinamic input, form.dinamic textarea').focus(function() {
        $(this).removeClass('focus empty prepared hidden').addClass('focus');

        if($(this).next().val() == '') {
            $(this).next().removeClass('focus empty prepared hidden').addClass('prepared empty');
        }

        if($(this).prev().val() == '') {
            $(this).prev().removeClass('focus empty prepared hidden').addClass('prepared empty');
        }
    }).focusout(function() {
        $(this).removeClass('focus');
        if($(this).val() == '' && $(this).next().val() == '') {
            $(this).next().removeClass('focus prepared hidden').addClass('hidden');
        }
        if($(this).val() == '')
            $(this).addClass('empty');
    });

    $('form.dinamic input, form.dinamic textarea').on('keyup', function(){
        var valid = true;
        if($('#nombre').val() == '' || $('#email').val() == '' || $('#mensaje').val() == '') valid = false;

        if(valid) {
            $('form.dinamic input[type="submit"]').removeClass('fadeOutLeft').addClass('fadeInLeft').css('visibility', 'visible');
        }else{
            $('form.dinamic input[type="submit"]').removeClass('fadeInLeft').addClass('fadeOutLeft')
        }
    });

    var slider = $('.servicesWrapper').glide({
        base    : 'servicesWrapper',
        bullets : 'paginador',
        autoplay: false,
        animationDuration: 200
    });
    var slider_api = slider.data('glide_api');

    $('form#contacto input[type="submit"]').click(function(){
        $(this).val('Enviando...');
    });

    $('form#contacto').on('submit', function(){
        if ($('form#contacto input:invalid, form textarea:invalid').length > 0) {
            $('form#contacto input[type="submit"]').val('Enviar');
            alert('Por favor diligencia el formulario de contacto.');
            return false;
        } else {
            $.ajax({
                async	: false,
                type	: 'post',
                url		: 'mailgun/index.php?action=send',
                data	: $(this).serialize(),
                success	: function(response) {
                    if(response) {
                        $('form.dinamic textarea, form.dinamic input[name="email"], form.dinamic input[name="nombre"]').val("").removeClass('focus prepared hidden').addClass('hidden empty');
                        $('form.dinamic input[type="submit"]').removeClass('fadeInLeft').addClass('fadeOutLeft');
                        $('.form-message').removeClass('fadeOut').addClass('fadeInDown').css({'display':'block'});
                        setTimeout(function() {
                            $('.form-message').removeClass('fadeInDown').addClass('fadeOut');
                            setTimeout(function() {
                                $('form.dinamic input[name="nombre"]').removeClass('hidden');
                                $('.form-message').css({'display':'none'});
                            }, 1000);
                            $('form#contacto input[type="submit"]').val('Enviar');
                        }, 6000);
                    } else {
                        alert('Error');
                    }
                }
            });
        }

        return false;
    });

    navbarScroll();

    $('.socialbar ul li a').on('mouseover, mouseenter', function(){
        $('.wrapper, #fsvs-pagination').css('display', 'none');
        $('#socialVisor').addClass($(this).attr('rel'));
        $('#socialVisor label').html($(this).attr('rel'));
    }).on('mouseleave', function(){
        $('#socialVisor').removeClass($(this).attr('rel'));
        setTimeout(function(){
            $('.wrapper, #fsvs-pagination').css('display', 'block');
            navbarScroll();
        }, 300);
    });


});

var homeAnimateIn = function (indexSection) {
    if($('#works').offset().top == 0
        || indexSection == 2) {
        $('#works .animated').css('visibility', 'visible');
        /** PORTFOLIO **/
        $('div.project-wrapper').removeClass('bounceOutUp');
        $('div.project-wrapper').addClass('bounceInDown');
        $('a.leftRow').removeClass('bounceOutLeft');
        $('a.leftRow').addClass('bounceInLeft');
        $('a.rightRow').removeClass('bounceOutRight');
        $('a.rightRow').addClass('bounceInRight');
        $('ul.carrusel-controls').removeClass('bounceOutDown');
        $('ul.carrusel-controls').addClass('bounceInUp');

    }

    if(indexSection == 1) {
        bannerSlider();
        timeOut = setInterval("bannerSlider()",4500);
    }

    if(indexSection == 3) {
        $('#services li.animated').removeClass('flipOutX').addClass('flipInX').css('visibility', 'visible');
    }

    if(indexSection == 4) {
        $('#customers .animated').addClass('bounce').css('visibility', 'visible');
    }
}

var homeAnimateOut = function (indexSection) {
    if($('#works').offset().top != 0
        || indexSection != 2) {
        /** PORFTOLIO **/
        $('div.project-wrapper').removeClass('bounceInDown');
        $('div.project-wrapper').addClass('bounceOutUp');
        $('a.leftRow').removeClass('bounceInLeft');
        $('a.leftRow').addClass('bounceOutLeft');
        $('a.rightRow').removeClass('bounceInRight');
        $('a.rightRow').addClass('bounceOutRight');
        $('ul.carrusel-controls').removeClass('bounceInUp');
        $('ul.carrusel-controls').addClass('bounceOutDown');
    }

    if(indexSection == 1) {
        clearInterval(timeOut);
    }

    if(indexSection != 3) {
        $('#services li.animated').removeClass('flipInX').addClass('flipOutX');
    }

}

var navbarScroll = function(){
    if ($('#welcome').length > 0) {
        if(Math.ceil($('#welcome').offset().top) < -100){
            $('nav, #home .slider .item.active .animated').css('visibility', 'visible');
            $('nav').removeClass('slideOutUp');
            $('nav').addClass('slideInDown');
            $('#home .slider .item.active .textSlider label').addClass('bounceInRight');
            $('#home .slider .item.active .devices').addClass('bounceInLeft');
            $('.start').removeClass('shake');
        } else {
            if(!$('nav').is('slideOutUp')) {
                $('nav').removeClass('slideInDown');
                $('nav').addClass('slideOutUp');
                $('.start').addClass('shake');
            }
        }
    }
}

var bannerIn = function(index) {
    var classIn  = 'fadeIn';
    var classOut  = 'fadeOut';
    $('.slider .item.active .textSlider label').removeClass(classIn).addClass(classOut);
    $('.slider .item.active .devices').removeClass('bounceInLeft').addClass('bounceOutLeft');
    $('.slider .item.active .button').removeClass('bounceInUp').addClass('bounceOutDown');
    $('.slider .item.active').removeClass('active');
    $($('.slider .item')[index]).addClass('active');
    setTimeout(function(){
        $('.slider .item.active .button').removeClass('bounceOutDown').addClass('bounceInUp').css('visibility', 'visible');
        $('.slider .item.active .textSlider label').removeClass(classOut).addClass(classIn).css('visibility', 'visible');
        $('.slider .item.active .devices').removeClass('bounceOutLeft').addClass('bounceInLeft').css('visibility', 'visible');
    },450);
}

var bannerSlider = function(){
    var index = 0;
    if($('.slider .item.active').next().index() > -1){
        index = $('.slider .item.active').next().index();
    }
    bannerIn(index);
}

var menuIn = function(){
    $('.mobile-menu').animate({
        marginLeft: "0vw",
    }, {
        duration: 500,
        specialEasing: {
            width: "linear",
            height: "easeOutBounce"
        }
    });
}

var menuOut = function(){
    $('.mobile-menu').animate({
        marginLeft: "-100vw",
    }, {
        duration: 500,
        specialEasing: {
            width: "linear",
            height: "easeOutBounce"
        },
        complete: function(){
            $("#menuClose").removeClass('bounceIn');
        }
    });
}

var portfolioButton = function(dir, isRow) {
    console.log(dir, isRow);
    var index = 0;
    var inClass = 'bounceInDown'; var outClass = 'bounceOutUp';
    if(isRow == true) {
        dir = (!dir) ? 'next' : dir;
        index = (dir == 'prev') ? $('.project-wrapper .item.' + inClass).prev().index() : $('.project-wrapper .item.' + inClass).next().index();
        index = (index == -1) ? ((dir == 'prev') ? $('.project-wrapper .item').length - 1 : 0) : index;
    } else {
        index = dir;
    }
    $('.project-wrapper .item').removeClass(inClass).addClass(outClass);
    $($('.project-wrapper .item')[index]).removeClass(outClass).addClass(inClass).css('display', 'initial');
    $('.carrusel-controls li a').removeClass('active');
    $($('.carrusel-controls li')[index]).find('a').addClass('active');
    setTimeout(function(){
        $('.project-wrapper .item.' + outClass).css('display', 'none');
    }, 500);
}

var modalIn = function () {
    $('#modalWindow').removeClass('flipOutY').addClass('flipInY').css('visibility', 'visible');
}

var modalOut = function () {
    $('#modalWindow').removeClass('flipInY').addClass('flipOutY');
    setTimeout(function(){
        $('#modalWindow').css('visibility', 'hidden');
    }, 500);
}

var loadProject = function (indice, toGo) {
    console.log(indice, toGo);
    var classOut = 'bounceOut' + ((toGo == 'Right') ? 'Left' : 'Right');
    var classIn = 'bounceIn' + toGo;

    $('#modalWindow .content').removeClass('bounceInLeft bounceInRight').addClass(classOut);

    setTimeout(function(){
        $.ajax({
            url     : Routing.generate('project', {id:indice}),
            success : function (response) {
                $('#modalWindow .content').html(response);
                setTimeout(function(){
                    $('#modalWindow .content').removeClass('bounceOutLeft bounceOutRight').addClass(classIn);
                }, 2);
            }
        })
    }, 2);

    if ($('#modalWindow').css('visibility') === 'hidden') {
        modalIn();
    }
}

$(function(){
    setTimeout(navbarScroll, 5000);
    setTimeout(navbarScroll, 10000);
});